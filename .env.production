# production settings for rinkeby

####################################################
######### Global settings
####################################################
# see https://ulog.js.org/ modules: ratesFeeder, WebsocketTicker, statusApi
LOG = LOG

####################################################
######### ratesFeeder settings
####################################################
# valid values: http, websocket  NB: Infura Websocket is not working anymore (new V3 websocket API is not supported yet)
PROVIDER_TYPE = http

# infura: https://rinkeby.infura.io/ (with trailing slash) or ws://rinkeby.infura.io/ws (Infura's WS is unreliable )
PROVIDER_URL = https://rinkeby.infura.io/

# NB: infura doesn't require API keys currently to WSS so don't need API KEY to be set if using infura websocket
# INFURA_API_KEY = <NEVER COMMIT API KEYS! Set it in .env.local or as env variable>

#ETHEREUM_ACCOUNT = <set the account as env var>

# NEVER COMMIT PRIVATE KEYS of real accounts!!! NB: make sure you have a leading 0x
#ETHEREUM_PRIVATE_KEY = <set the private key as env var>

# consider setRate ethereum tx failed after this time (in ms)
#    ratesFeeder will try to send setRate again  when  next checkticker triggered. 5 mins for rinkeby/mainnet
#    NB: If web3js transactionBlockTimeout: 50 (wss) or transactionPollingTimeout: 480 (http)
#          is not reached for any reason. Normally web3 will timeout sooner, it is just an extra timeout to be 100% we schedule a next check.
SETRATE_TX_TIMEOUT = 300000

# how often compare live ticker prices to decide if Augmint on chain price needs to be updated (in ms). Set to 0 to disable (for tests)
#    NB: ticker prices in state & updated "instantly" each time a trade made on the exchange (via websocket subscriptions )
CHECK_TICKER_PRICE_INTERVAL = 30000

# when to update Augmint rate? A rate update tx will be sent to chain if live ticker price (avg) is lower/higher by this % than current Augmint rate
# in % (i.e. 1 = 1%)
LIVE_PRICE_THRESHOLD_PT = 2

# log success with LOG level after how many confirmation
LOG_AS_SUCCESS_AFTER_N_CONFIRMATION = 12

####################################################
######### Status API settings
####################################################
# heroku sets PORT env
#PORT = 80
# log level for morgan logger. see https://github.com/expressjs/morgan
#  + additional "off" option: not use morgen at all (if production env provides http logging )
STATUSAPI_HTTP_LOG_LEVEL = off
